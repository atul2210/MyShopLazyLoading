{"version":3,"sources":["./src/app/pages/user-registration/user-registration.component.html","./src/app/pages/user-registration/user-registration.component.css","./src/app/pages/user-registration/user-registration.component.ts","./src/app/pages/user-registration/user-registration.module.ts"],"names":[],"mappings":"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","file":"app-pages-user-registration-user-registration-module-es2015.js","sourcesContent":["export default \"\\r\\n<form  class=\\\"container was-validated fontClass \\\" role=\\\"form\\\"  [formGroup]=\\\"myform\\\" \\r\\nrole=\\\"form\\\"  >\\r\\n\\r\\n      <div class = \\\"box box-body\\\">\\r\\n  <!-- <fieldset formGroupName=\\\"name\\\"> -->\\r\\n    <div class=\\\"box-header with-border\\\">\\r\\n      <h3 class=\\\"box-title\\\">New User</h3>\\r\\n    </div>\\r\\n<br>\\r\\n      <div class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{\\r\\n     'has-danger': mobile.invalid && (mobile.dirty || mobile.touched),\\r\\n     'has-success': mobile.valid && (mobile.dirty || mobile.touched)\\r\\n   }\\\">\\r\\n   <label>Mobile Number</label>\\r\\n   <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"mobile\\\"  value=[mobileNum]  required>\\r\\n   <div class=\\\"was-validated\\\"\\r\\n        *ngIf=\\\"mobile.errors && (mobile.dirty || mobile.touched ) \\\">\\r\\n     <p *ngIf=\\\"mobile.errors.required\\\">Mobile number is required</p>\\r\\n     \\r\\n   </div>\\r\\n     <!-- <pre>Valid? {{ myform.controls.name.controls.mobile.valid }}</pre>\\r\\n     <pre>Dirty? {{ myform.controls.name.controls.mobile.dirty }}</pre>\\r\\n     <pre>pres? {{ myform.controls.name.controls.mobile.pristine }}</pre> -->\\r\\n </div>\\r\\n\\r\\n <div class=\\\"form-group\\\"\\r\\n [ngClass]=\\\"{\\r\\n'has-danger': otp.invalid && (otp.dirty || otp.touched),\\r\\n'has-success': otp.valid && (otp.dirty || otp.touched)\\r\\n}\\\">\\r\\n<label>OTP</label>\\r\\n<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"otp\\\"  value=[otp]  required>\\r\\n<div class=\\\"was-validated\\\"\\r\\n   *ngIf=\\\"otp.errors && (otp.dirty || otp.touched ) \\\">\\r\\n<p *ngIf=\\\"otp.errors.required\\\">OTP is required</p>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- <div *ngIf=\\\"!isOtpOK\\\";else [innerHTML] = \\\"'' |safe:'script'\\\"\\r\\n(change)=\\\"validateOTP();\\\"> -->\\r\\n<!-- <div  *ngIf=\\\"!isOtpOK\\\" >\\r\\n\\r\\nOTP is Invalid. Please re-enter wwwOTP\\\"\\r\\n\\r\\n</div> -->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{\\r\\n        'has-danger': firstName.invalid && (firstName.dirty || firstName.touched || firstName.pristine),\\r\\n        'has-success': firstName.valid && (firstName.dirty || firstName.touched)\\r\\n      }\\\">\\r\\n      <label>First Name</label>\\r\\n      <input type=\\\"text\\\"\\r\\n             class=\\\"form-control form-control-sm \\\"\\r\\n             formControlName=\\\"firstName\\\"\\r\\n             required>\\r\\n      <div class=\\\"form-control-feedback\\\"\\r\\n           *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\">\\r\\n        <p *ngIf=\\\"firstName.errors.required\\\">First Name is required</p>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group \\\">\\r\\n      <label>Middle Name</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"middleName\\\"> \\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{\\r\\n        'has-danger': lastName.invalid && (lastName.dirty || lastName.touched),\\r\\n        'has-success': lastName.valid && (lastName.dirty || lastName.touched)\\r\\n      }\\\">\\r\\n      <label>Last Name</label>\\r\\n      <input type=\\\"text\\\"\\r\\n             class=\\\"form-control form-control-sm\\\"\\r\\n             formControlName=\\\"lastName\\\"\\r\\n             required>\\r\\n      <div class=\\\"form-control-feedback\\\"\\r\\n           *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\">\\r\\n        <p *ngIf=\\\"lastName.errors.required\\\">Last Name is required</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': myemail.invalid && (myemail.dirty || myemail.touched),\\r\\n        'has-success': myemail.valid && (myemail.dirty || myemail.touched)\\r\\n   }\\\">\\r\\n\\r\\n   <label>Email</label>\\r\\n    <input type=\\\"email\\\" \\r\\n           class=\\\"form-control form-control-sm\\\"\\r\\n           formControlName=\\\"myemail\\\"\\r\\n           required>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"myemail.errors && (myemail.dirty || myemail.touched)\\\">\\r\\n      <p *ngIf=\\\"myemail.errors.required\\\">Email is required</p>\\r\\n      <p *ngIf=\\\"myemail.errors.pattern\\\">The email address must contain at least the @ character</p>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': password.invalid && (password.dirty || password.touched|| password.pristine),\\r\\n        'has-success': password.valid && (password.dirty || password.touched)\\r\\n   }\\\">\\r\\n    <label>Password</label>\\r\\n    <input type=\\\"password\\\"\\r\\n           class=\\\"form-control form-control-sm\\\"\\r\\n           formControlName=\\\"password\\\"\\r\\n           required>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\r\\n      <p *ngIf=\\\"password.errors.required\\\">Password is required</p>\\r\\n      <p *ngIf=\\\"password.errors.minlength\\\">Password must be 8 characters long, we need another {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}} characters </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--\\r\\n    <pre>{{ password.errors | json }}</pre>\\r\\n  -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Ulternate Mobile</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ulternatemobile\\\"> \\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\"\\r\\n  [ngClass]=\\\"{\\r\\n   'has-danger': address.invalid && (address.dirty || address.touched),\\r\\n   'has-success': address.valid && (address.dirty || address.touched)\\r\\n}\\\">\\r\\n<label>Address</label>\\r\\n<textarea rows=\\\"3\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" required></textarea>\\r\\n<div class=\\\"form-control-feedback\\\"\\r\\n    *ngIf=\\\"address.errors && (address.dirty || address.touched)\\\">\\r\\n <p *ngIf=\\\"address.errors.required\\\">Address is required</p>\\r\\n <!-- <p *ngIf=\\\"address.errors.minlength\\\">Password must be 8 characters long, we need another {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}} characters </p> -->\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\"\\r\\n[ngClass]=\\\"{\\r\\n 'has-danger': mystate.invalid && (mystate.dirty || mystate.touched),\\r\\n 'has-success': mystate.valid && (mystate.dirty || mystate.touched)\\r\\n}\\\">\\r\\n<label>State</label>\\r\\n<select class=\\\"form-control form-control-sm\\\"\\r\\n     formControlName=\\\"mystate\\\"  [(ngModel)]=\\\"selectedState\\\" (change)=GetCities(selectedState)>\\r\\n<!-- <option value=\\\"\\\">Please select a State</option> -->\\r\\n<option *ngFor=\\\"let lang of states\\\"\\r\\n[value]=\\\"lang.stateid\\\">{{lang.stateName}}\\r\\n</option>\\r\\n</select>\\r\\n\\r\\n<div class=\\\"form-control-feedback\\\"\\r\\n*ngIf=\\\"mystate.errors && (mystate.dirty || mystate.touched)\\\">\\r\\n<p *ngIf=\\\"mystate.errors.required\\\">State is required</p>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\"\\r\\n  [ngClass]=\\\"{\\r\\n   'has-danger': city.invalid && (city.dirty || city.touched),\\r\\n   'has-success': city.valid && (city.dirty || city.touched)\\r\\n}\\\">\\r\\n    <label>City</label>\\r\\n    <select class=\\\"form-control form-control-sm\\\"\\r\\n     formControlName=\\\"city\\\"  >\\r\\n\\r\\n    <option *ngFor=\\\"let cc of citeis\\\"\\r\\n    [value]=\\\"cc.stateid\\\">{{cc.city}}\\r\\n    </option>\\r\\n  </select>\\r\\n    <!-- <input type=\\\"city\\\"\\r\\n          class=\\\"form-control form-control-sm\\\"\\r\\n          formControlName=\\\"city\\\"\\r\\n          required> -->\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n        *ngIf=\\\"city.errors && (city.dirty || city.touched)\\\">\\r\\n    <p *ngIf=\\\"city.errors.required\\\">City is required</p>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\"\\r\\n  [ngClass]=\\\"{\\r\\n   'has-danger': pin.invalid && (pin.dirty || pin.touched),\\r\\n   'has-success': pin.valid && (pin.dirty || pin.touched)\\r\\n}\\\">\\r\\n    <label>Pin</label>\\r\\n    <input type=\\\"pin\\\"\\r\\n          class=\\\"form-control form-control-sm\\\"\\r\\n          formControlName=\\\"pin\\\"\\r\\n          required>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n        *ngIf=\\\"pin.errors && (pin.dirty || pin.touched)\\\">\\r\\n    <p *ngIf=\\\"pin.errors.required\\\">Pin is required</p>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n  <!-- <pre>{{myform.value | json}}</pre> -->\\r\\n<!-- </fieldset> -->\\r\\n  <div class=\\\"box-footer\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2 pull-right\\\" (click)=\\\"save()\\\"   >Submit</button>\\r\\n    </div>\\r\\n\\r\\n \\r\\n</div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItcmVnaXN0cmF0aW9uL3VzZXItcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit,AfterViewInit,ElementRef, Inject } from '@angular/core';\r\nimport {ReactiveFormsModule,FormsModule,NgControl,  FormGroup,FormControl,ValidationErrors,Validator, Validators} from '@angular/forms'\r\nimport {Router,ActivatedRoute} from '@angular/router'\r\nimport {registration} from '../../model/registration'\r\nimport {ShoppingApiService} from '../../service/shopping-api.service'\r\nimport {LoginComponent} from '../login/login.component';\r\nimport { LOCAL_STORAGE } from '@ng-toolkit/universal'\r\nimport {activateuserservce} from '../../service/ActivateUserService';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.css'],\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n//////  isOtpOK:boolean=true;\r\n  states: string[] = [\r\n    // 'Uttar Pradesh',\r\n    // 'Delhi',\r\n    // 'Madhya Pradesh',\r\n  ];\r\n  citeis:any=null;\r\n  selectedState;\r\n\r\n  response:any=null;\r\n\r\n  myform: FormGroup;\r\n  mobile:FormControl;\r\n  firstName: FormControl;\r\n  middleName:FormControl;\r\n  lastName: FormControl;\r\n  myemail: FormControl;\r\n  password: FormControl;\r\n  //language: FormControl;\r\n  city:FormControl;\r\n  address:FormControl;\r\n  mystate:FormControl;\r\n  ulternatemobile:FormControl;\r\n  pin:FormControl;\r\n  otp:FormControl;\r\n  ResState:any;\r\n  constructor(@Inject(LOCAL_STORAGE) private localStorage: any, private ActivatedRoute:ActivatedRoute,private router:Router,private ShoppingApiService:ShoppingApiService,private activateuserservce:activateuserservce) { }\r\n  submitted:boolean;\r\n  \r\n  ngOnInit() {\r\n    let userform:FormGroup;\r\n    \r\n    this.createFormControls();\r\n    this.createForm();\r\n   \r\n    this.myform.controls[\"mobile\"].patchValue(this.ActivatedRoute.snapshot.params['mobile']);\r\n    \r\n    this.ShoppingApiService.GetStates()\r\n    .subscribe((res)=>\r\n    {\r\n      this.ResState=res.body;\r\n      this.states=this.ResState;\r\n      console.log(\"states\",this.states)\r\n      \r\n    });\r\n\r\n\r\n\r\n    }\r\n    createFormControls() {\r\n      this.mobile= new  FormControl('',Validators.required)\r\n      this.firstName = new FormControl('', Validators.required);\r\n      this.middleName = new FormControl('');\r\n      this.lastName = new FormControl('', Validators.required);\r\n      this.myemail = new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(\"[^ @]*@[^ @]*\")\r\n      ]);\r\n      this.password = new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8)\r\n      ]);\r\n      this.city = new FormControl('',Validators.required);\r\n      this.address= new FormControl('',Validators.required);\r\n      this.mystate= new FormControl('',Validators.required);\r\n      this.ulternatemobile = new FormControl('');\r\n      this.pin= new FormControl('',Validators.required);\r\n      this.otp = new FormControl('',Validators.required);\r\n    }\r\n  \r\n    createForm() {\r\n      this.myform = new FormGroup({\r\n        //name: new FormGroup({\r\n        mobile:this.mobile,\r\n        firstName: this.firstName,\r\n        middleName:this.middleName,\r\n        lastName: this.lastName,\r\n        myemail: this.myemail,\r\n        password: this.password,\r\n        address:this.address,\r\n        city: this.city,\r\n        mystate:this.mystate,\r\n        ulternatemobile:this.ulternatemobile,\r\n        pin:this.pin,\r\n        otp: this.otp\r\n     //}),\r\n      });\r\n    }\r\n\r\n    save() \r\n    { \r\n      \r\n      if(this.myform.valid)\r\n      {\r\n\r\n        let data: registration;\r\n        data = new registration();\r\n        data.mobile = this.myform.controls['mobile'].value; \r\n        data.ulternateMobile = this.myform.controls[\"ulternatemobile\"].value;\r\n        data.firstName = this.myform.controls[\"firstName\"].value;\r\n        data.middleName = this.myform.controls[\"middleName\"].value;\r\n        data.lastName = this.myform.controls[\"lastName\"].value;\r\n        data.myemail = this.myform.controls[\"myemail\"].value;\r\n        data.password = this.myform.controls[\"password\"].value;\r\n        data.address = this.myform.controls[\"address\"].value;\r\n        data.city = this.myform.controls[\"city\"].value;\r\n        data.mystate = this.myform.controls[\"mystate\"].value;\r\n        data.pin = this.myform.controls[\"pin\"].value;\r\n        data.otp = +this.myform.controls[\"otp\"].value;\r\n        this.activateuserservce.setOption('email',this.myform.controls[\"myemail\"].value);\r\n\r\n\r\n\r\n          this.ShoppingApiService.addUser(data)\r\n          .subscribe((m:Response)=>\r\n          {\r\n            this.response=m;\r\n            this.router.navigateByUrl('/NewUserActivate')\r\n          },\r\n          (err) => \r\n          {\r\n          \r\n            console.log(err);\r\n            this.router.navigateByUrl(\"/Error/\"+err.error.Message +\"/regis/\"+data.mobile )\r\n          });\r\n    }\r\n  }\r\n    \r\n  GetCities(StateId:string)\r\n  {\r\n\r\n   \r\n    this.ShoppingApiService.GetCities(StateId)\r\n    .subscribe((res:Response)=>\r\n    {\r\n        this.citeis=res.body\r\n        console.log(this.citeis)\r\n    });\r\n  }\r\n\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {UserRegistrationComponent} from './user-registration.component';\r\nimport { Routes,RouterModule } from '@angular/router';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\n\r\nconst routes: Routes = [{ path: '', component: UserRegistrationComponent },\r\n\r\n];\r\n@NgModule({\r\n  declarations: [UserRegistrationComponent],\r\n  imports: [\r\n    CommonModule,FormsModule,ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class UserRegistrationComponentModule { }\r\n"],"sourceRoot":"webpack:///"}