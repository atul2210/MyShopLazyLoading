{"version":3,"sources":["./src/app/pages/changepassword/changepassword.component.html","./src/app/pages/changepassword/changepassword.component.css","./src/app/pages/changepassword/changepassword.component.ts","./src/app/pages/changepassword/changepassword.module.ts"],"names":[],"mappings":"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","file":"app-pages-changepassword-changepassword-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container was-validated fontClass\\\">\\r\\n\\r\\n<form   role=\\\"form\\\"  [formGroup]=\\\"myform\\\"  >\\r\\n  <div class=\\\"form-group\\\"\\r\\n       [ngClass]=\\\"{\\r\\n        'has-danger': myemail.invalid && (myemail.dirty || myemail.touched),\\r\\n        'has-success': myemail.valid && (myemail.dirty || myemail.touched)\\r\\n   }\\\">\\r\\n\\r\\n   <label class =\\\"fontClass\\\">Email</label>\\r\\n    <input type=\\\"email\\\" \\r\\n           class=\\\"form-control form-control-sm\\\"\\r\\n           formControlName=\\\"myemail\\\"\\r\\n           required>\\r\\n    <div class=\\\"form-control-feedback\\\"\\r\\n         *ngIf=\\\"myemail.errors && (myemail.dirty || myemail.touched)\\\">\\r\\n      <p *ngIf=\\\"myemail.errors.required\\\">Email is required</p>\\r\\n      <p *ngIf=\\\"myemail.errors.pattern\\\">The email address must contain at least the @ character</p>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\"\\r\\n  [ngClass]=\\\"{\\r\\n   'has-danger': password.invalid && (password.dirty || password.touched|| password.pristine),\\r\\n   'has-success': password.valid && (password.dirty || password.touched)\\r\\n}\\\">\\r\\n<label class =\\\"fontClass\\\">New Password</label>\\r\\n<input type=\\\"password\\\"\\r\\n      class=\\\"form-control form-control-sm\\\"\\r\\n      formControlName=\\\"password\\\"\\r\\n      required>\\r\\n<div class=\\\"form-control-feedback\\\"\\r\\n    *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\r\\n <p *ngIf=\\\"password.errors.required\\\">Password is required</p>\\r\\n <p *ngIf=\\\"password.errors.minlength\\\">Password must be 8 characters long, we need another {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}} characters </p>\\r\\n</div>\\r\\n</div>\\r\\n  \\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\"\\r\\n[ngClass]=\\\"{\\r\\n 'has-danger': confirmpassword.invalid && (confirmpassword.dirty || confirmpassword.touched|| confirmpassword.pristine),\\r\\n 'has-success': confirmpassword.valid && (confirmpassword.dirty || confirmpassword.touched)\\r\\n}\\\">\\r\\n<label class =\\\"fontClass\\\">Confirm New Password</label>\\r\\n<input type=\\\"password\\\"\\r\\n    class=\\\"form-control form-control-sm\\\"\\r\\n    formControlName=\\\"confirmpassword\\\"\\r\\n    required>\\r\\n<div class=\\\"form-control-feedback\\\"\\r\\n  *ngIf=\\\"confirmpassword.errors && (confirmpassword.dirty || confirmpassword.touched)\\\">\\r\\n<p *ngIf=\\\"confirmpassword.errors.required\\\">Confirm Password is required</p>\\r\\n<p *ngIf=\\\"confirmpassword.errors.minlength\\\">Confirm Password must be 8 characters long, we need another {{confirmpassword.errors.minlength.requiredLength - confirmpassword.errors.minlength.actualLength}} characters </p>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n <div>\\r\\n  <div style = \\\"margin-left :40px;\\\" class=\\\"text-danger font-weight-bold\\\" >{{err}}</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n</form>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n<table class=\\\"table\\\">\\r\\n   \\r\\n    <tr >\\r\\n      <td>\\r\\n       <button class=\\\"btn-success \\\" (click)=\\\"changepassword()\\\" >Submit</button>\\r\\n      </td>\\r\\n    \\r\\n    <td >\\r\\n      <button class=\\\" btn-success pull-right\\\"  (click)=\\\"RedirectToLogin()\\\" >Login</button>\\r\\n    </td>\\r\\n  </tr>\\r\\n  </table>\\r\\n\\r\\n</div>\"","export default \".btn-success\\r\\n{\\r\\n    width:70px;\\r\\n    font-size: 10px;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY2hhbmdlcGFzc3dvcmQvY2hhbmdlcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxVQUFVO0lBQ1YsZUFBZTs7QUFFbkIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jaGFuZ2VwYXNzd29yZC9jaGFuZ2VwYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1zdWNjZXNzXHJcbntcclxuICAgIHdpZHRoOjcwcHg7XHJcbiAgICBmb250LXNpemU6IDEwcHg7XHJcblxyXG59Il19 */\"","import { Component, OnInit,AfterViewInit,ElementRef } from '@angular/core';\r\nimport {ReactiveFormsModule,FormsModule,NgControl,  FormGroup,FormControl,ValidationErrors,Validator, Validators} from '@angular/forms'\r\nimport {Router,ActivatedRoute} from '@angular/router';\r\nimport {registration} from '../../model/registration';\r\nimport {ShoppingApiService} from '../../service/shopping-api.service'\r\n\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html',\r\n  styleUrls: ['./changepassword.component.css']\r\n})\r\nexport class ChangepasswordComponent implements OnInit {\r\n  status;\r\n  myform: FormGroup;\r\n  display='none'; //default Variable\r\n  err:string=\"\";\r\n  isOk=false;\r\n  mobile:string=\"\";\r\n  loading:boolean=false;\r\n  data;\r\n  \r\n  myemail: FormControl;\r\n  password: FormControl;\r\n  confirmpassword: FormControl;\r\n  items:any;\r\n\r\n  constructor(private ActivatedRoute:ActivatedRoute,private router:Router,private ShoppingApiService:ShoppingApiService) { }\r\n\r\n  ngOnInit() {\r\n    let userform:FormGroup;\r\n    \r\n    this.myemail = new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(\"[^ @]*@[^ @]*\")\r\n    ]);\r\n\r\n      this.password = new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8)\r\n      ]);\r\n\r\n      this.confirmpassword = new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8)\r\n      ]);\r\n\r\n      this.myform = new FormGroup({\r\n        \r\n      myemail: this.myemail,\r\n      password: this.password,\r\n      confirmpassword: this.confirmpassword,\r\n    });\r\n\r\n  }\r\n\r\n  changepassword()\r\n  {\r\n    if(this.myform.valid)\r\n    {\r\n\r\n     let email =  this.myform.controls[\"myemail\"].value;\r\n     let password= this.myform.controls[\"password\"].value;\r\n     let confirmpassword= this.myform.controls[\"confirmpassword\"].value;\r\n      this.ShoppingApiService.changepassword(email,password,confirmpassword)\r\n      .subscribe((res:Response)=>\r\n      {\r\n        this.items=res;\r\n        this.err= this.items.body.result;\r\n      },\r\n      err=>{\r\n        \r\n        this.err=err.error;\r\n        console.log(\"error \",err.body[\"error\"]);\r\n      }\r\n    \r\n    )\r\n      \r\n    }\r\n  }\r\n\r\n  RedirectToLogin()\r\n  {\r\n      this.router.navigateByUrl('/login');\r\n  }    \r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ChangepasswordComponent} from './changepassword.component';\r\nimport { Routes,RouterModule } from '@angular/router';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\n\r\nconst routes: Routes = [{ path: '', component: ChangepasswordComponent },\r\n\r\n];\r\n@NgModule({\r\n  declarations: [ChangepasswordComponent],\r\n  imports: [\r\n    CommonModule,FormsModule,ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class ChangepasswordModule { }\r\n"],"sourceRoot":"webpack:///"}